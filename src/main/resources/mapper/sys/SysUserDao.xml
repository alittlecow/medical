<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jubo.modules.sys.dao.SysUserDao">


    <select id="queryByMobile" resultType="com.jubo.modules.sys.entity.SysUserEntity">
		select * from sys_user where `status` = 1 AND mobile = #{mobile} limit 0, 1
	</select>

    <select id="queryObject" resultType="com.jubo.modules.sys.entity.SysUserEntity">
        select * from sys_user where user_id = #{value}
    </select>

    <select id="queryList" resultType="com.jubo.modules.sys.entity.SysUserEntity">
        select u.*, (select d.role_name from sys_role d where d.role_id = u.role_id) roleName from sys_user u
        <where>
            <if test="username != null and username.trim() != ''">
                and u.`username` like concat('%',#{username},'%')
            </if>
        </where>

        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_user
        <where>
            <if test="username != null and username.trim() != ''">
                and `username` like concat('%',#{username},'%')
            </if>
        </where>
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
        select m.perms from sys_user_role ur
        LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
        LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
        where ur.user_id = #{userId}
    </select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
        select distinct rm.menu_id from sys_user_role ur
        LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
        where ur.user_id = #{userId}
    </select>

    <select id="queryByUserName" resultType="com.jubo.modules.sys.entity.SysUserEntity">
        select * from sys_user where username = #{username}
    </select>

    <insert id="save" parameterType="com.jubo.modules.sys.entity.SysUserEntity" useGeneratedKeys="true"
            keyProperty="userId">
        insert into sys_user
        (
        `user_id`,
        `username`,
        `password`,
        `salt`,
        `email`,
        `mobile`,
        `status`,
        `role_id`,
        `free_count`,
        `create_time`
        )
        values
        (
        #{userId},
        #{username},
        #{password},
        #{salt},
        #{email},
        #{mobile},
        #{status},
        #{roleId},
        #{freeCount},
        #{createTime}
        )
    </insert>

    <update id="update" parameterType="com.jubo.modules.sys.entity.SysUserEntity">
        update sys_user
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="roleId != null">`role_id` = #{roleId},</if>
            <if test="isAuth != null">`is_auth` = #{isAuth},</if>
            <if test="realName != null and realName!= '' ">`real_name` = #{realName},</if>
            <if test="idCard != null and idCard != '' ">`id_card` = #{idCard},</if>
            <if test="freeCount != null ">`free_count` = #{freeCount},</if>
        </set>
        where user_id = #{userId}
    </update>

    <!--用户个人信息修改-->
    <update id="updateAppUser" parameterType="java.util.Map">
        update sys_user
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            <if test="sex != null">`mobile` = #{sex},</if>
        </set>
        where user_id = #{userId}
    </update>

    <update id="updatePassword" parameterType="map">
        update sys_user set `password` = #{newPassword}
        where user_id = #{userId} and password = #{password}
    </update>


    <update id="updatePasswordByUserId" parameterType="map">
        update sys_user set `password` = #{password}
        where user_id = #{userId}
    </update>

    <delete id="deleteBatch">
        delete from sys_user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>